---
// Fonts
import '@fontsource-variable/open-sans'
import openSansWoff2 from '@fontsource-variable/open-sans/files/open-sans-latin-wght-normal.woff2?url'

// Styles
import '../styles/global.css'

// Components
import { HeroHeader } from '@/components/header'
import { cn } from '@/lib/utils'

// Props
interface Props {
  title: string
  description?: string
}

const { title, description } = Astro.props

// Menu
const ITEMS = [
  { name: 'About', href: '/about' },
  { name: 'Projects', href: '/projects' },
  { name: 'Experience', href: '/experience' },
  { name: 'Contact', href: '/contact' },
]
---

<script is:inline>
  const getThemePreference = () => {
    if (typeof localStorage !== "undefined" && localStorage.getItem("theme")) {
      return localStorage.getItem("theme");
    }
    return window.matchMedia("(prefers-color-scheme: dark)").matches
      ? "dark"
      : "light";
  };
  const isDark = getThemePreference() === "dark";
  document.documentElement.classList[isDark ? "add" : "remove"]("dark");

  if (typeof localStorage !== "undefined") {
    const observer = new MutationObserver(() => {
      const isDark = document.documentElement.classList.contains("dark");
      localStorage.setItem("theme", isDark ? "dark" : "light");
    });
    observer.observe(document.documentElement, {
      attributes: true,
      attributeFilter: ["class"],
    });
  }
</script>

<html lang="en">
  <head>
    <meta charset="UTF-8" />
    <meta name="viewport" content="width=device-width" />
    <link rel="icon" type="image/svg+xml" href="/favicon.svg" />
    <meta name="generator" content={Astro.generator} />
    <title>{title}</title>
    <link rel="sitemap" href="/sitemap-index.xml" />
    <meta
      name="description"
      content={description ||
        "Jhosep Davila is a web developer with a passion for creating beautiful and functional websites."}
    />
    <meta name="author" content="Jhosep Davila" />
    <meta
      name="keywords"
      content="Jhosep Davila, web developer, portfolio, Jhosep Davila portfolio"
    />
    <meta name="robots" content="index, follow" />
    <meta name="theme-color" content="#030014" />
    <meta name="og:title" content={title} />
    <meta
      name="og:description"
      content={description ||
        "Jhosep Davila is a web developer with a passion for creating beautiful and functional websites."}
    />
    <meta name="og:type" content="website" />
    <meta name="og:url" content="https://jdb-portfolio.vercel.app/" />
    <meta
      name="og:image"
      content="https://res.cloudinary.com/diusjfaoe/image/upload/v1751752720/jmdev-studio/Screenshot_20250705_185810_tp3teu.png"
    />
    <meta name="twitter:card" content="summary_large_image" />
    <meta name="twitter:title" content={title} />
    <meta
      name="twitter:description"
      content={description ||
        "Jhosep Davila is a web developer with a passion for creating beautiful and functional websites."}
    />
    <meta
      name="twitter:image"
      content="https://res.cloudinary.com/diusjfaoe/image/upload/v1751752720/jmdev-studio/Screenshot_20250705_185810_tp3teu.png"
    />
    <link
      rel="preload"
      as="font"
      type="font/woff2"
      href={openSansWoff2}
      crossorigin="anonymous"
    />
  </head>

  <body class="bg-background text-foreground">
    <HeroHeader client:only>
      {
        ITEMS.map((item) => (
          <li>
            <a
              href={item.href}
              class={cn(
                "text-muted-foreground hover:text-accent-foreground block duration-150",
                {
                  "text-accent-foreground": Astro.url.pathname === item.href,
                }
              )}
            >
              <span>{item.name}</span>
            </a>
          </li>
        ))
      }
    </HeroHeader>

    <main>
      <slot />
    </main>
  </body><style>
    html,
    body {
      margin: 0;
      width: 100%;
      height: 100%;
      scroll-behavior: smooth;
    }
  </style>
</html>
